{"version":3,"sources":["../../controllers/amazonController.js"],"names":["amazonClient","require","Product","ItemFilter","exports","index","req","res","ASIN","params","itemLookup","idType","itemId","responseGroup","then","product","result","id","findOne","_id","err","dbProduct","send","newProduct","save","error","status","catch"],"mappings":";;AAAA,IAAMA,eAAeC,QAAQ,wBAAR,CAArB;AACA,IAAIC,UAAUD,QAAQ,6BAAR,CAAd;AACA,IAAIE,aAAaF,QAAQ,uBAAR,CAAjB;;AAEAG,QAAQC,KAAR,GAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1B,QAAMC,OAAOF,IAAIG,MAAJ,CAAWD,IAAxB;AACAR,iBAAaU,UAAb,CAAwB;AACpBC,gBAAQ,MADY;AAEpBC,gBAAQJ,IAFY;AAGpBK,uBAAe;AAHK,KAAxB,EAKKC,IALL,CAKU,kBAAU;AACZ,YAAIC,UAAUC,MAAd;AACA,YAAMC,KAAKF,QAAQ,CAAR,EAAWP,IAAX,CAAgB,CAAhB,CAAX;AACAN,gBAAQgB,OAAR,CAAgB,EAACC,KAAKF,EAAN,EAAhB,EAA2B,UAAUG,GAAV,EAAeC,SAAf,EAA0B;AACjD,gBAAIA,cAAc,IAAlB,EAAwB;AACpBd,oBAAIe,IAAJ,CAASD,SAAT;AACH,aAFD,MAEO,IAAIN,YAAY,IAAhB,EAAsB;AACzB,oBAAMQ,aAAa,IAAIrB,OAAJ,CAAYC,WAAWa,MAAX,CAAZ,CAAnB;AACAO,2BAAWC,IAAX,CAAgB,UAACC,KAAD,EAAQV,OAAR,EAAoB;AAChC,wBAAIU,KAAJ,EAAW;AACPlB,4BAAImB,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB,oCAArB;AACH,qBAFD,MAEO;AACHf,4BAAIe,IAAJ,CAASP,OAAT;AACH;AACJ,iBAND;AAQH;AACJ,SAdD;AAeH,KAvBL,EAwBKY,KAxBL,CAwBW,UAACF,KAAD;AAAA,eAAWlB,IAAImB,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqBG,KAArB,CAAX;AAAA,KAxBX;AAyBH,CA3BD","file":"amazonController.js","sourcesContent":["const amazonClient = require('../integrations/amazon');\r\nlet Product = require('../database/models/products');\r\nlet ItemFilter = require('../helpers/itemHelper');\r\n\r\nexports.index = (req, res) => {\r\n    const ASIN = req.params.ASIN;\r\n    amazonClient.itemLookup({\r\n        idType: 'ASIN',\r\n        itemId: ASIN,\r\n        responseGroup: 'Images,ItemAttributes,OfferFull,Offers,PromotionSummary,SalesRank,VariationImages,Reviews,OfferSummary,EditorialReview,OfferListings,OfferSummary'\r\n    })\r\n        .then(result => {\r\n            let product = result;\r\n            const id = product[0].ASIN[0];\r\n            Product.findOne({_id: id}, function (err, dbProduct) {\r\n                if (dbProduct !== null) {\r\n                    res.send(dbProduct);\r\n                } else if (product !== null) {\r\n                    const newProduct = new Product(ItemFilter(result));\r\n                    newProduct.save((error, product) => {\r\n                        if (error) {\r\n                            res.status(500).send('could not save the desired product')\r\n                        } else {\r\n                            res.send(product);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        })\r\n        .catch((error) => res.status(404).send(error));\r\n};"]}